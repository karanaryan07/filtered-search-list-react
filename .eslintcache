[{"F:\\Assignment\\search-bar-assignment\\src\\App.js":"1","F:\\Assignment\\search-bar-assignment\\src\\reportWebVitals.js":"2","F:\\Assignment\\search-bar-assignment\\src\\SearchBar\\SearchBar.js":"3","F:\\Assignment\\search-bar-assignment\\src\\index.js":"4","F:\\Assignment\\search-bar-assignment\\src\\SearchBar\\DummyData.js":"5"},{"size":350,"mtime":1610097820214,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1610046121387,"results":"8","hashOfConfig":"7"},{"size":5699,"mtime":1610126769038,"results":"9","hashOfConfig":"7"},{"size":500,"mtime":1610046121387,"results":"10","hashOfConfig":"7"},{"size":918,"mtime":1610126766328,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"1w1ydhv",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"15"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Assignment\\search-bar-assignment\\src\\App.js",["25"],"import './App.css';\nimport SearchBar from './SearchBar/SearchBar'\nimport {Col , Row } from 'react-bootstrap'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-container\">\n        <Row>\n          <Row>\n              <SearchBar />\n          </Row>\n        </Row>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n",["26","27"],"F:\\Assignment\\search-bar-assignment\\src\\reportWebVitals.js",[],"F:\\Assignment\\search-bar-assignment\\src\\SearchBar\\SearchBar.js",["28","29","30"],"import React, { useEffect, useState } from 'react';\r\nimport './SearchBar.scss';\r\nimport { Row, Col, Button , Card } from 'react-bootstrap';\r\nimport {usersList , emptyList} from './DummyData'\r\n\r\n\r\n\r\nfunction emptySearchCheck(usersList , searchTerm)\r\n{\r\n    let emptyCheck = false\r\n    usersList.filter((data) => {\r\n        if(data.name.toLowerCase()\r\n        .includes(searchTerm.toLowerCase()) \r\n        || \r\n        data.id.toLowerCase()\r\n        .includes(searchTerm.toLowerCase())  \r\n        || \r\n        data.address.toLowerCase()\r\n        .includes(searchTerm.toLowerCase()))\r\n        {\r\n            emptyCheck = true\r\n        }\r\n    })\r\n    return emptyCheck\r\n}\r\n\r\nconst SearchBar = () => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [opsToRender, setOpsToRender] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (usersList.length && emptySearchCheck(usersList, searchTerm)) {\r\n            setOpsToRender(\r\n                usersList\r\n                    .filter((data) => {\r\n                        if (searchTerm == null) return data;\r\n                        else if (\r\n                            data.id\r\n                                .toLowerCase()\r\n                                .includes(searchTerm.toLowerCase()) \r\n                            ||\r\n                            data.name\r\n                                .toLowerCase()\r\n                                .includes(searchTerm.toLowerCase()) \r\n                            ||\r\n                            data.address\r\n                                .toLowerCase()\r\n                                .includes(searchTerm.toLowerCase()) \r\n                        ) {\r\n                            return data;\r\n                        }\r\n                    })\r\n                    .map((data, index) => {\r\n                        return (\r\n                            <Col key={index}>\r\n                                <div>\r\n                                    <Button\r\n                                        size=\"sm\"\r\n                                        id=\"custom-margin\"\r\n                                        className={\r\n                                            'display-texts'\r\n                                        }\r\n                                        block\r\n                                    >\r\n                                        {data.id}\r\n                                        <br/>\r\n                                        <br/>\r\n                                       {data.name}\r\n                                       <br/>\r\n                                       <br/>\r\n                                       {data.address}\r\n                                    </Button>\r\n                                </div>\r\n                            </Col>\r\n                        );\r\n                    })\r\n            );\r\n        }\r\n        else\r\n        {\r\n            setOpsToRender(\r\n                emptyList.map((data , index) => {\r\n                    return (\r\n                        <Col key={index}>\r\n                        <div\r\n                        >\r\n                                <Button\r\n                                    size=\"sm\"\r\n                                    id=\"custom-margin\"\r\n                                    className={\r\n                                        'display-texts'\r\n                                    }\r\n                                    block\r\n                                >\r\n                                {data.name}\r\n                                </Button>\r\n                            </div>\r\n                        </Col>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }, [usersList, searchTerm]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"operation-cards\">\r\n                <Card>\r\n                    <Row className=\"card-header\">\r\n                        <Col sm={4} xs={4} className=\"panel-heading\">\r\n                            <Row>\r\n                                <strong>Search Bar</strong>\r\n                            </Row>\r\n                        </Col>\r\n                        <Col sm={8} xs={8}>\r\n                            <div className=\"panel-controls\">\r\n                                <div className=\"search-in-operations ml-auto\">\r\n                                    <form className=\"form-inline\">\r\n                                        <input\r\n                                            id=\"search-box-operations\"\r\n                                            type=\"text\"\r\n                                            className=\"search-box-operations rounded\"\r\n                                            placeholder=\"Search users by ID and name and address...\"\r\n                                            name=\"q\"\r\n                                            value={searchTerm}\r\n                                            autoComplete=\"off\"\r\n                                            onChange={(e) =>\r\n                                                setSearchTerm(e.target.value)\r\n                                            }\r\n                                        />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"operations-panel-menu custom-scrollbars\">\r\n                        <div id=\"operations\">\r\n                            <Row className=\"no-gutters\">{opsToRender}</Row>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","F:\\Assignment\\search-bar-assignment\\src\\index.js",[],"F:\\Assignment\\search-bar-assignment\\src\\SearchBar\\DummyData.js",[],{"ruleId":"31","severity":1,"message":"32","line":3,"column":9,"nodeType":"33","messageId":"34","endLine":3,"endColumn":12},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":11,"column":29,"nodeType":"41","messageId":"42","endLine":11,"endColumn":31},{"ruleId":"39","severity":1,"message":"43","line":36,"column":36,"nodeType":"41","messageId":"44","endLine":36,"endColumn":38},{"ruleId":"45","severity":1,"message":"46","line":104,"column":8,"nodeType":"47","endLine":104,"endColumn":31,"suggestions":"48"},"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'usersList'. Either exclude it or remove the dependency array. Outer scope values like 'usersList' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["51"],"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Update the dependencies array to be: [searchTerm]",{"range":"54","text":"55"},[3709,3732],"[searchTerm]"]